{
  "address": "0x384ad7A74153FC21467BC77cac5528DcA0c56F4f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "show",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "fullReveal",
          "type": "bool"
        }
      ],
      "name": "Aquarius",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "remaining",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "show",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "fullReveal",
          "type": "bool"
        }
      ],
      "name": "Aries",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "remaining",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "show",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "fullReveal",
          "type": "bool"
        }
      ],
      "name": "Cancer",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "remaining",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "show",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "fullReveal",
          "type": "bool"
        }
      ],
      "name": "Capricorn",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "remaining",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "show",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "fullReveal",
          "type": "bool"
        }
      ],
      "name": "Cygnus",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "remaining",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "show",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "fullReveal",
          "type": "bool"
        }
      ],
      "name": "Gemini",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "remaining",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "show",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "fullReveal",
          "type": "bool"
        }
      ],
      "name": "Leo",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "remaining",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "show",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "fullReveal",
          "type": "bool"
        }
      ],
      "name": "Libra",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "remaining",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "show",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "fullReveal",
          "type": "bool"
        }
      ],
      "name": "Pegasus",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "remaining",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "show",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "fullReveal",
          "type": "bool"
        }
      ],
      "name": "Pisces",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "remaining",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "show",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "fullReveal",
          "type": "bool"
        }
      ],
      "name": "Sagittarius",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "remaining",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "show",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "fullReveal",
          "type": "bool"
        }
      ],
      "name": "Scorpio",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "remaining",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "show",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "fullReveal",
          "type": "bool"
        }
      ],
      "name": "Taurus",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "remaining",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "show",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "fullReveal",
          "type": "bool"
        }
      ],
      "name": "UrsaMinor",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "remaining",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "show",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "fullReveal",
          "type": "bool"
        }
      ],
      "name": "Virgo",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "remaining",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "stars",
          "type": "string[]"
        },
        {
          "internalType": "string",
          "name": "open",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "close",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "show",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "fullReveal",
          "type": "bool"
        }
      ],
      "name": "buildStar",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "remaining",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "constellationSeed",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "fullReveal",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "gazed",
          "type": "uint8"
        }
      ],
      "name": "getConstellation",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "remaining",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xdaf102205202e79f9d6f66b96e9d05e591891ecff8857ff66b0f757cdd9a6a50",
  "receipt": {
    "to": null,
    "from": "0x0a12A6777fc7D65b1461070648dA9CAE6962fcEe",
    "contractAddress": "0x384ad7A74153FC21467BC77cac5528DcA0c56F4f",
    "transactionIndex": 70,
    "gasUsed": "4968817",
    "logsBloom": "0x
    "blockHash": "0x0fa7fd336cffd4117d9c268fbebba7600953f8234499df0b2d9c439e730b445c",
    "transactionHash": "0xdaf102205202e79f9d6f66b96e9d05e591891ecff8857ff66b0f757cdd9a6a50",
    "logs": [
      {
        "transactionIndex": 70,
        "blockNumber": 43949409,
        "transactionHash": "0xdaf102205202e79f9d6f66b96e9d05e591891ecff8857ff66b0f757cdd9a6a50",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000000a12a6777fc7d65b1461070648da9cae6962fcee",
          "0x00000000000000000000000067b94473d81d0cd00849d563c94d0432ac988b49"
        ],
        "data": "0x000000000000000000000000000000000000000000000000024de402717175fe0000000000000000000000000000000000000000000000008935d5c2abaea0090000000000000000000000000000000000000000000013e7a04228c1cfb974d200000000000000000000000000000000000000000000000086e7f1c03a3d2a0b0000000000000000000000000000000000000000000013e7a2900cc4412aead0",
        "logIndex": 250,
        "blockHash": "0x0fa7fd336cffd4117d9c268fbebba7600953f8234499df0b2d9c439e730b445c"
      }
    ],
    "blockNumber": 43949409,
    "cumulativeGasUsed": "15418830",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "3e6973bac707de8cce66ea97621d2f00",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"show\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"fullReveal\",\"type\":\"bool\"}],\"name\":\"Aquarius\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"remaining\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"show\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"fullReveal\",\"type\":\"bool\"}],\"name\":\"Aries\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"remaining\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"show\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"fullReveal\",\"type\":\"bool\"}],\"name\":\"Cancer\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"remaining\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"show\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"fullReveal\",\"type\":\"bool\"}],\"name\":\"Capricorn\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"remaining\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"show\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"fullReveal\",\"type\":\"bool\"}],\"name\":\"Cygnus\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"remaining\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"show\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"fullReveal\",\"type\":\"bool\"}],\"name\":\"Gemini\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"remaining\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"show\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"fullReveal\",\"type\":\"bool\"}],\"name\":\"Leo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"remaining\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"show\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"fullReveal\",\"type\":\"bool\"}],\"name\":\"Libra\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"remaining\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"show\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"fullReveal\",\"type\":\"bool\"}],\"name\":\"Pegasus\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"remaining\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"show\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"fullReveal\",\"type\":\"bool\"}],\"name\":\"Pisces\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"remaining\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"show\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"fullReveal\",\"type\":\"bool\"}],\"name\":\"Sagittarius\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"remaining\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"show\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"fullReveal\",\"type\":\"bool\"}],\"name\":\"Scorpio\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"remaining\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"show\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"fullReveal\",\"type\":\"bool\"}],\"name\":\"Taurus\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"remaining\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"show\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"fullReveal\",\"type\":\"bool\"}],\"name\":\"UrsaMinor\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"remaining\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"show\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"fullReveal\",\"type\":\"bool\"}],\"name\":\"Virgo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"remaining\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"stars\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"open\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"close\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"show\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"fullReveal\",\"type\":\"bool\"}],\"name\":\"buildStar\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"remaining\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"constellationSeed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"fullReveal\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"gazed\",\"type\":\"uint8\"}],\"name\":\"getConstellation\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"remaining\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Constellations.sol\":\"Constellations\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/Constellations.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.18;\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\nlibrary Constellations {\\n    using Strings for uint256;\\n\\n    function getConstellation(\\n        uint256 constellationSeed,\\n        bool fullReveal,\\n        uint8 gazed\\n    ) public view returns (string memory, uint8 remaining) {\\n        uint8 seed = (uint8)(constellationSeed % 13);\\n        if (seed == 0) {\\n            return Aries(gazed, fullReveal);\\n        } else if (seed == 1) {\\n            return Sagittarius(gazed, fullReveal);\\n        } else if (seed == 2) {\\n            return Capricorn(gazed, fullReveal);\\n        } else if (seed == 3) {\\n            return Aquarius(gazed, fullReveal);\\n        } else if (seed == 4) {\\n            return Pisces(gazed, fullReveal);\\n        } else if (seed == 5) {\\n            return Scorpio(gazed, fullReveal);\\n        } else if (seed == 6) {\\n            return Libra(gazed, fullReveal);\\n        } else if (seed == 7) {\\n            return Virgo(gazed, fullReveal);\\n        } else if (seed == 8) {\\n            return Leo(gazed, fullReveal);\\n        } else if (seed == 9) {\\n            return Cancer(gazed, fullReveal);\\n        } else if (seed == 10) {\\n            return Gemini(gazed, fullReveal);\\n        } else if (seed == 11) {\\n            return Taurus(gazed, fullReveal);\\n        } else if (seed == 12) {\\n            return Pegasus(gazed, fullReveal);\\n        } else if (seed == 13) {\\n            return UrsaMinor(gazed, fullReveal);\\n        } else {\\n            return Cygnus(gazed, fullReveal);\\n        }\\n    }\\n\\n    function buildStar(\\n        string[] memory stars,\\n        string memory open,\\n        string memory close,\\n        uint8 show,\\n        bool fullReveal\\n    ) public pure returns (string memory, uint8 remaining) {\\n        if (fullReveal || show > stars.length) {\\n            show = (uint8)(stars.length);\\n        }\\n        uint8 left = show;\\n        string memory constellation = \\\"\\\";\\n        constellation = string.concat(constellation, open);\\n        for (uint8 i = 0; i < show; i++) {\\n            constellation = string.concat(constellation, stars[i]);\\n            left--;\\n        }\\n        if (show == stars.length) {\\n            constellation = string.concat(constellation, close);\\n        } else {\\n            constellation = string.concat(constellation, \\\"</g>\\\");\\n        }\\n        // return (constellation, ((uint8)(stars.length) - show));\\n        return (constellation, left);\\n    }\\n\\n    function Aries(\\n        uint8 show,\\n        bool fullReveal\\n    ) public view returns (string memory, uint8 remaining) {\\n        string[] memory stars = new string[](6);\\n\\n        string\\n            memory open = '<g transform=\\\"translate(316,133), rotate(0)\\\" fill=\\\"#fff\\\" opacity=\\\"0.8\\\">';\\n\\n        stars[0] = '<circle cx=\\\"-30\\\" cy=\\\"60\\\" r=\\\"2\\\"/>';\\n        stars[1] = '<circle cx=\\\"-10\\\" cy=\\\"45\\\" r=\\\"2\\\"/>';\\n        stars[2] = '<circle cx=\\\"5\\\" cy=\\\"0\\\" r=\\\"2\\\"/>';\\n        stars[3] = '<circle cx=\\\"55\\\" cy=\\\"10\\\" r=\\\"2\\\"/>';\\n        stars[4] = '<circle cx=\\\"80\\\" cy=\\\"30\\\" r=\\\"2\\\"/>';\\n        stars[5] = '<circle cx=\\\"85\\\" cy=\\\"45\\\" r=\\\"2\\\"/>';\\n\\n        string\\n            memory close = '<path d=\\\"m -30 60 L -10 45 L 5 0 L 55 10 L 80 30 L 85 45\\\" fill=\\\"none\\\" stroke=\\\"white\\\" opacity=\\\".5\\\"/></g>';\\n        return buildStar(stars, open, close, show, fullReveal);\\n    }\\n\\n    function Sagittarius(\\n        uint8 show,\\n        bool fullReveal\\n    ) public view returns (string memory, uint8 remaining) {\\n        string\\n            memory open = '<g transform=\\\"translate(234,-290), rotate(0)\\\" fill=\\\"#fff\\\" opacity=\\\"0.8\\\">';\\n        string[] memory stars = new string[](20);\\n\\n        stars[0] = '<circle r=\\\"2\\\" cx=\\\"169\\\" cy=\\\"447\\\"/>';\\n        stars[1] = '<circle r=\\\"2\\\" cx=\\\"148\\\" cy=\\\"462\\\"/>';\\n        stars[2] = '<circle r=\\\"2\\\" cx=\\\"139\\\" cy=\\\"482\\\"/>';\\n        stars[3] = '<circle r=\\\"2\\\" cx=\\\"136\\\" cy=\\\"419\\\"/>';\\n        stars[4] = '<circle r=\\\"2\\\" cx=\\\"134\\\" cy=\\\"457\\\"/>';\\n        stars[5] = '<circle r=\\\"2\\\" cx=\\\"132\\\" cy=\\\"475\\\"/>';\\n        stars[6] = '<circle r=\\\"2\\\" cx=\\\"128\\\" cy=\\\"441\\\"/>';\\n        stars[7] = '<circle r=\\\"2\\\" cx=\\\"110\\\" cy=\\\"449\\\"/>';\\n        stars[8] = '<circle r=\\\"2\\\" cx=\\\"100\\\" cy=\\\"446\\\"/>';\\n        stars[9] = '<circle r=\\\"2\\\" cx=\\\"97\\\" cy=\\\"460\\\"/>';\\n        stars[10] = '<circle r=\\\"2\\\" cx=\\\"97\\\" cy=\\\"421\\\"/>';\\n        stars[11] = '<circle r=\\\"2\\\" cx=\\\"91\\\" cy=\\\"519\\\"/>';\\n        stars[12] = '<circle r=\\\"2\\\" cx=\\\"91\\\" cy=\\\"453\\\"/>';\\n        stars[13] = '<circle r=\\\"2\\\" cx=\\\"90\\\" cy=\\\"426\\\"/>';\\n        stars[14] = '<circle r=\\\"2\\\" cx=\\\"88\\\" cy=\\\"507\\\"/>';\\n        stars[15] = '<circle r=\\\"2\\\" cx=\\\"81\\\" cy=\\\"424\\\"/>';\\n        stars[16] = '<circle r=\\\"2\\\" cx=\\\"71\\\" cy=\\\"515\\\"/>';\\n        stars[17] = '<circle r=\\\"2\\\" cx=\\\"66\\\" cy=\\\"415\\\"/>';\\n        stars[18] = '<circle r=\\\"2\\\" cx=\\\"62\\\" cy=\\\"446\\\"/>';\\n        stars[19] = '<circle r=\\\"2\\\" cx=\\\"42\\\" cy=\\\"468\\\"/>';\\n\\n        string\\n            memory close = '<path d=\\\"m169, 447 L 148, 462 L 134,457 L 132, 475 L 139, 482 M 134,457 L 128,441 L 136,419 M 128, 441 L 110, 449 L 100,446 L 90,426 L 97,421 M 90,426 L 81,424 L 66,415 M 110, 449 L 97, 460 L 91, 453 L 100,446 M 91,453 L 62, 446 L 42, 468 L 71, 515 L 88,507 M 71,515 L 91,519\\\" stroke=\\\"#fff\\\" opacity=\\\".5\\\" fill=\\\"none\\\"/></g>';\\n\\n        return buildStar(stars, open, close, show, fullReveal);\\n    }\\n\\n    function Capricorn(\\n        uint8 show,\\n        bool fullReveal\\n    ) public view returns (string memory, uint8 remaining) {\\n        string[] memory stars = new string[](11);\\n\\n        string\\n            memory open = '<g transform=\\\"translate(114,-300), rotate(0)\\\" fill=\\\"#fff\\\" opacity=\\\"0.8\\\">';\\n        stars[0] = '<circle r=\\\"2\\\" cx=\\\"254\\\" cy=\\\"492\\\"/>';\\n        stars[1] = '<circle r=\\\"2\\\" cx=\\\"253\\\" cy=\\\"483\\\"/>';\\n        stars[2] = '<circle r=\\\"2\\\" cx=\\\"241\\\" cy=\\\"498\\\"/>';\\n        stars[3] = '<circle r=\\\"2\\\" cx=\\\"232\\\" cy=\\\"424\\\"/>';\\n        stars[4] = '<circle r=\\\"2\\\" cx=\\\"231\\\" cy=\\\"414\\\"/>';\\n        stars[5] = '<circle r=\\\"2\\\" cx=\\\"221\\\" cy=\\\"510\\\"/>';\\n        stars[6] = '<circle r=\\\"2\\\" cx=\\\"212\\\" cy=\\\"481\\\"/>';\\n        stars[7] = '<circle r=\\\"2\\\" cx=\\\"202\\\" cy=\\\"514\\\"/>';\\n        stars[8] = '<circle r=\\\"2\\\" cx=\\\"201\\\" cy=\\\"495\\\"/>';\\n        stars[9] = '<circle r=\\\"2\\\" cx=\\\"191\\\" cy=\\\"511\\\"/>';\\n        stars[10] = '<circle r=\\\"2\\\" cx=\\\"189\\\" cy=\\\"519\\\"/>';\\n        string\\n            memory close = '<path d=\\\"M 254, 492 L 241, 498 L 221, 510 L 202,514 L 189, 519 L 191, 511 L 201,495 L 212, 481 L 232, 424 L 231 414 M 232, 424 L 253, 483\\\" stroke=\\\"#fff\\\" opacity=\\\".5\\\" fill=\\\"none\\\"/></g>';\\n        return buildStar(stars, open, close, show, fullReveal);\\n    }\\n\\n    function Aquarius(\\n        uint8 show,\\n        bool fullReveal\\n    ) public view returns (string memory, uint8 remaining) {\\n        string[] memory stars = new string[](13);\\n        string\\n            memory open = '<g transform=\\\"translate(-6,-300), rotate(0)\\\" fill=\\\"#fff\\\" opacity=\\\"0.8\\\">';\\n        stars[0] = '<circle r=\\\"2\\\" cx=\\\"378\\\" cy=\\\"406 \\\"/>';\\n        stars[1] = '<circle r=\\\"2\\\" cx=\\\"372\\\" cy=\\\"530 \\\"/>';\\n        stars[2] = '<circle r=\\\"2\\\" cx=\\\"354\\\" cy=\\\"517 \\\"/>';\\n        stars[3] = '<circle r=\\\"2\\\" cx=\\\"347\\\" cy=\\\"512 \\\"/>';\\n        stars[4] = '<circle r=\\\"2\\\" cx=\\\"339\\\" cy=\\\"435 \\\"/>';\\n        stars[5] = '<circle r=\\\"2\\\" cx=\\\"335\\\" cy=\\\"476 \\\"/>';\\n        stars[6] = '<circle r=\\\"2\\\" cx=\\\"325\\\" cy=\\\"515 \\\"/>';\\n        stars[7] = '<circle r=\\\"2\\\" cx=\\\"319\\\" cy=\\\"534 \\\"/>';\\n        stars[8] = '<circle r=\\\"2\\\" cx=\\\"302\\\" cy=\\\"459 \\\"/>';\\n        stars[9] = '<circle r=\\\"2\\\" cx=\\\"302\\\" cy=\\\"480 \\\"/>';\\n        stars[10] = '<circle r=\\\"2\\\" cx=\\\"292\\\" cy=\\\"484 \\\"/>';\\n        stars[11] = '<circle r=\\\"2\\\" cx=\\\"289\\\" cy=\\\"492 \\\"/>';\\n        stars[12] = '<circle r=\\\"2\\\" cx=\\\"365\\\" cy=\\\"472 \\\"/>';\\n        string\\n            memory close = '<path d=\\\"M378, 406 L 339, 435 L 302, 459 L 302, 480 L 292 484 L 289, 492 L 319 534 L 325,515 L 347,512 L 354,517 L 372,530 M 302,459 L 335,476 L 365 472\\\" fill=\\\"none\\\" stroke=\\\"#fff\\\" opacity=\\\".5\\\"/></g>';\\n        return buildStar(stars, open, close, show, fullReveal);\\n    }\\n\\n    function Pisces(\\n        uint8 show,\\n        bool fullReveal\\n    ) public view returns (string memory, uint8 remaining) {\\n        string[] memory stars = new string[](17);\\n\\n        string\\n            memory open = '<g transform=\\\"translate(14,-170), rotate(0) scale(0.7)\\\" fill=\\\"#fff\\\" opacity=\\\"0.8\\\">';\\n        stars[0] = '<circle r=\\\"2.86\\\" cx=\\\"523\\\" cy=\\\"547 \\\"/>';\\n        stars[1] = '<circle r=\\\"2.86\\\" cx=\\\"502\\\" cy=\\\"526 \\\"/>';\\n        stars[2] = '<circle r=\\\"2.86\\\" cx=\\\"495\\\" cy=\\\"541 \\\"/>';\\n        stars[3] = '<circle r=\\\"2.86\\\" cx=\\\"482\\\" cy=\\\"502 \\\"/>';\\n        stars[4] = '<circle r=\\\"2.86\\\" cx=\\\"475\\\" cy=\\\"484 \\\"/>';\\n        stars[5] = '<circle r=\\\"2.86\\\" cx=\\\"474\\\" cy=\\\"417 \\\"/>';\\n        stars[6] = '<circle r=\\\"2.86\\\" cx=\\\"471\\\" cy=\\\"400 \\\"/>';\\n        stars[7] = '<circle r=\\\"2.86\\\" cx=\\\"468\\\" cy=\\\"427 \\\"/>';\\n        stars[8] = '<circle r=\\\"2.86\\\" cx=\\\"465\\\" cy=\\\"539 \\\"/>';\\n        stars[9] = '<circle r=\\\"2.86\\\" cx=\\\"459\\\" cy=\\\"445 \\\"/>';\\n        stars[10] = '<circle r=\\\"2.86\\\" cx=\\\"457\\\" cy=\\\"395 \\\"/>';\\n        stars[11] = '<circle r=\\\"2.86\\\" cx=\\\"454\\\" cy=\\\"425 \\\"/>';\\n        stars[12] = '<circle r=\\\"2.86\\\" cx=\\\"448\\\" cy=\\\"401 \\\"/>';\\n        stars[13] = '<circle r=\\\"2.86\\\" cx=\\\"445\\\" cy=\\\"413 \\\"/>';\\n        stars[14] = '<circle r=\\\"2.86\\\" cx=\\\"425\\\" cy=\\\"541 \\\"/>';\\n        stars[15] = '<circle r=\\\"2.86\\\" cx=\\\"415\\\" cy=\\\"553 \\\"/>';\\n        stars[16] = '<circle r=\\\"2.86\\\" cx=\\\"400\\\" cy=\\\"544 \\\"/>';\\n        string\\n            memory close = '<path d=\\\"m400, 544 L 415, 553 L 425,541 L465, 539 L 495, 541 L 523, 547 L 502, 526 L 482, 502 L 475, 484 L 459, 445 L 454, 425 L 445, 413 L 448, 401 L 457, 395 L 471, 400 L 474, 417 L 468, 427 L 454 425 \\\" stroke=\\\"#fff\\\" opacity=\\\".5\\\" fill=\\\"none\\\" stroke-width=\\\"1.43\\\"/></g>';\\n        return buildStar(stars, open, close, show, fullReveal);\\n    }\\n\\n    function Scorpio(\\n        uint8 show,\\n        bool fullReveal\\n    ) public view returns (string memory, uint8 remaining) {\\n        string[] memory stars = new string[](15);\\n\\n        string\\n            memory open = '<g transform=\\\"translate(-121,-120), rotate(0)\\\" fill=\\\"#fff\\\" opacity=\\\"0.8\\\">';\\n        stars[0] = '<circle r=\\\"2\\\" cx=\\\"513\\\" cy=\\\"256 \\\"/>';\\n        stars[1] = '<circle r=\\\"2\\\" cx=\\\"513\\\" cy=\\\"268 \\\"/>';\\n        stars[2] = '<circle r=\\\"2\\\" cx=\\\"510\\\" cy=\\\"248 \\\"/>';\\n        stars[3] = '<circle r=\\\"2\\\" cx=\\\"489\\\" cy=\\\"264 \\\"/>';\\n        stars[4] = '<circle r=\\\"2\\\" cx=\\\"481\\\" cy=\\\"268 \\\"/>';\\n        stars[5] = '<circle r=\\\"2\\\" cx=\\\"475\\\" cy=\\\"274 \\\"/>';\\n        stars[6] = '<circle r=\\\"2\\\" cx=\\\"458\\\" cy=\\\"296 \\\"/>';\\n        stars[7] = '<circle r=\\\"2\\\" cx=\\\"456\\\" cy=\\\"314 \\\"/>';\\n        stars[8] = '<circle r=\\\"2\\\" cx=\\\"452\\\" cy=\\\"328 \\\"/>';\\n        stars[9] = '<circle r=\\\"2\\\" cx=\\\"435\\\" cy=\\\"333 \\\"/>';\\n        stars[10] = '<circle r=\\\"2\\\" cx=\\\"419\\\" cy=\\\"304 \\\"/>';\\n        stars[11] = '<circle r=\\\"2\\\" cx=\\\"415\\\" cy=\\\"332 \\\"/>';\\n        stars[12] = '<circle r=\\\"2\\\" cx=\\\"410\\\" cy=\\\"313 \\\"/>';\\n        stars[13] = '<circle r=\\\"2\\\" cx=\\\"405\\\" cy=\\\"320 \\\"/>';\\n        stars[14] = '<circle r=\\\"2\\\" cx=\\\"513\\\" cy=\\\"281 \\\"/>';\\n        string\\n            memory close = '<path d=\\\"m419, 304 L 410, 313 L 405, 320 L 415, 332 L 435, 333 L  452, 328 L 456, 314 L 458, 296 L 475, 274 L 481, 268 L 489, 264 L 513, 256 L 510, 248 M 513, 256 L 513, 268 L 513 281\\\" stroke=\\\"#fff\\\" opacity=\\\".5\\\" fill=\\\"none\\\"/></g>';\\n        return buildStar(stars, open, close, show, fullReveal);\\n    }\\n\\n    function Libra(\\n        uint8 show,\\n        bool fullReveal\\n    ) public view returns (string memory, uint8 remaining) {\\n        string[] memory stars = new string[](8);\\n        string\\n            memory open = '<g transform=\\\"translate(4,-120), rotate(0)\\\" fill=\\\"#fff\\\" opacity=\\\"0.8\\\">';\\n        stars[0] = '<circle r=\\\"2\\\" cx=\\\"361\\\" cy=\\\"272 \\\"/>';\\n        stars[1] = '<circle r=\\\"2\\\" cx=\\\"356\\\" cy=\\\"307 \\\"/>';\\n        stars[2] = '<circle r=\\\"2\\\" cx=\\\"335\\\" cy=\\\"329 \\\"/>';\\n        stars[3] = '<circle r=\\\"2\\\" cx=\\\"335\\\" cy=\\\"321 \\\"/>';\\n        stars[4] = '<circle r=\\\"2\\\" cx=\\\"333\\\" cy=\\\"252 \\\"/>';\\n        stars[5] = '<circle r=\\\"2\\\" cx=\\\"324\\\" cy=\\\"276 \\\"/>';\\n        stars[6] = '<circle r=\\\"2\\\" cx=\\\"318\\\" cy=\\\"281 \\\"/>';\\n        stars[7] = '<circle r=\\\"2\\\" cx=\\\"309\\\" cy=\\\"287 \\\"/>';\\n        string\\n            memory close = '<path d=\\\"M 309, 287 L 318, 281 L 324, 276 L 333, 252 L 361, 272, 356, 307 L  335, 321 L 335, 329 M 356, 307 L 333, 252 \\\" stroke=\\\"#fff\\\" opacity=\\\".5\\\" fill=\\\"none\\\"/></g>';\\n        return buildStar(stars, open, close, show, fullReveal);\\n    }\\n\\n    function Virgo(\\n        uint8 show,\\n        bool fullReveal\\n    ) public view returns (string memory, uint8 remaining) {\\n        string[] memory stars = new string[](12);\\n        string\\n            memory open = '<g transform=\\\"translate(114,-114), rotate(0)\\\" fill=\\\"#fff\\\" opacity=\\\"0.8\\\">';\\n        stars[0] = '<circle r=\\\"2\\\" cx=\\\"261\\\" cy=\\\"296 \\\"/>';\\n        stars[1] = '<circle r=\\\"2\\\" cx=\\\"251\\\" cy=\\\"225 \\\"/>';\\n        stars[2] = '<circle r=\\\"2\\\" cx=\\\"248\\\" cy=\\\"276 \\\"/>';\\n        stars[3] = '<circle r=\\\"2\\\" cx=\\\"246\\\" cy=\\\"244 \\\"/>';\\n        stars[4] = '<circle r=\\\"2\\\" cx=\\\"241\\\" cy=\\\"327 \\\"/>';\\n        stars[5] = '<circle r=\\\"2\\\" cx=\\\"231\\\" cy=\\\"324 \\\"/>';\\n        stars[6] = '<circle r=\\\"2\\\" cx=\\\"225\\\" cy=\\\"249 \\\"/>';\\n        stars[7] = '<circle r=\\\"2\\\" cx=\\\"223\\\" cy=\\\"285 \\\"/>';\\n        stars[8] = '<circle r=\\\"2\\\" cx=\\\"221\\\" cy=\\\"342 \\\"/>';\\n        stars[9] = '<circle r=\\\"2\\\" cx=\\\"207\\\" cy=\\\"299 \\\"/>';\\n        stars[10] = '<circle r=\\\"2\\\" cx=\\\"198\\\" cy=\\\"242 \\\"/>';\\n        stars[11] = '<circle r=\\\"2\\\" cx=\\\"188\\\" cy=\\\"330 \\\"/>';\\n        string\\n            memory close = '<path d=\\\"m221, 342 L 231, 324 L 241, 327 L 261, 296 L 248, 276 L  246, 244 L 251, 225 M 246, 244 L 225, 249 L 198, 242 M 225, 249 L 223, 285 L 261, 296 M 223, 285 L 207 299 L 188 330\\\" stroke=\\\"#fff\\\" opacity=\\\".5\\\" fill=\\\"none\\\"/></g>';\\n        return buildStar(stars, open, close, show, fullReveal);\\n    }\\n\\n    function Leo(\\n        uint8 show,\\n        bool fullReveal\\n    ) public view returns (string memory, uint8 remaining) {\\n        string[] memory stars = new string[](9);\\n\\n        string\\n            memory open = '<g transform=\\\"translate(254,-114), rotate(0)\\\" fill=\\\"#fff\\\" opacity=\\\"0.8\\\">';\\n        stars[0] = '<circle r=\\\"2\\\" cx=\\\"136\\\" cy=\\\"276 \\\"/>';\\n        stars[1] = '<circle r=\\\"2\\\" cx=\\\"120\\\" cy=\\\"264 \\\"/>';\\n        stars[2] = '<circle r=\\\"2\\\" cx=\\\"108\\\" cy=\\\"224 \\\"/>';\\n        stars[3] = '<circle r=\\\"2\\\" cx=\\\"102\\\" cy=\\\"265 \\\"/>';\\n        stars[4] = '<circle r=\\\"2\\\" cx=\\\"94\\\" cy=\\\"226 \\\"/>';\\n        stars[5] = '<circle r=\\\"2\\\" cx=\\\"92\\\" cy=\\\"253 \\\"/>';\\n        stars[6] = '<circle r=\\\"2\\\" cx=\\\"80\\\" cy=\\\"324 \\\"/>';\\n        stars[7] = '<circle r=\\\"2\\\" cx=\\\"64\\\" cy=\\\"307 \\\"/>';\\n        stars[8] = '<circle r=\\\"2\\\" cx=\\\"61\\\" cy=\\\"344 \\\"/>';\\n        string\\n            memory close = '<path d=\\\"m108,224 L 94, 226 L 92, 253 L 102, 265 L 120 264 L  136 276 L 80 324 L 61 344L 64 307 L 102 265 M 80 324 L 120 264\\\" stroke=\\\"#fff\\\" opacity=\\\".5\\\" fill=\\\"none\\\"/></g>';\\n        return buildStar(stars, open, close, show, fullReveal);\\n    }\\n\\n    function Cancer(\\n        uint8 show,\\n        bool fullReveal\\n    ) public view returns (string memory, uint8 remaining) {\\n        string[] memory stars = new string[](5);\\n\\n        string\\n            memory open = '<g transform=\\\"translate(-106,50), rotate(0)\\\" fill=\\\"#fff\\\" opacity=\\\"0.8\\\">';\\n        stars[0] = '<circle r=\\\"2\\\" cx=\\\"491\\\" cy=\\\"143 \\\"/>';\\n        stars[1] = '<circle r=\\\"2\\\" cx=\\\"443\\\" cy=\\\"123 \\\"/>';\\n        stars[2] = '<circle r=\\\"2\\\" cx=\\\"440\\\" cy=\\\"157 \\\"/>';\\n        stars[3] = '<circle r=\\\"2\\\" cx=\\\"437\\\" cy=\\\"112 \\\"/>';\\n        stars[4] = '<circle r=\\\"2\\\" cx=\\\"418\\\" cy=\\\"88 \\\"/>';\\n        string\\n            memory close = '<path d=\\\"m491 143 L 443, 123 L 437 112 L 418 88 M 442 123 L 440 157   \\\" stroke=\\\"#fff\\\" opacity=\\\".5\\\" fill=\\\"none\\\"/></g>';\\n        return buildStar(stars, open, close, show, fullReveal);\\n    }\\n\\n    function Gemini(\\n        uint8 show,\\n        bool fullReveal\\n    ) public view returns (string memory, uint8 remaining) {\\n        string[] memory stars = new string[](13);\\n\\n        string\\n            memory open = '<g transform=\\\"translate(4,50), rotate(0)\\\" fill=\\\"#fff\\\" opacity=\\\"0.8\\\">';\\n        stars[0] = '<circle r=\\\"2\\\" cx=\\\"386\\\" cy=\\\"116 \\\"/>';\\n        stars[1] = '<circle r=\\\"2\\\" cx=\\\"377\\\" cy=\\\"115 \\\"/>';\\n        stars[2] = '<circle r=\\\"2\\\" cx=\\\"374\\\" cy=\\\"128 \\\"/>';\\n        stars[3] = '<circle r=\\\"2\\\" cx=\\\"365\\\" cy=\\\"144 \\\"/>';\\n        stars[4] = '<circle r=\\\"2\\\" cx=\\\"359\\\" cy=\\\"109 \\\"/>';\\n        stars[5] = '<circle r=\\\"2\\\" cx=\\\"359\\\" cy=\\\"162 \\\"/>';\\n        stars[6] = '<circle r=\\\"2\\\" cx=\\\"334\\\" cy=\\\"132 \\\"/>';\\n        stars[7] = '<circle r=\\\"2\\\" cx=\\\"324\\\" cy=\\\"89 \\\"/>';\\n        stars[8] = '<circle r=\\\"2\\\" cx=\\\"319\\\" cy=\\\"125 \\\"/>';\\n        stars[9] = '<circle r=\\\"2\\\" cx=\\\"315\\\" cy=\\\"87 \\\"/>';\\n        stars[10] = '<circle r=\\\"2\\\" cx=\\\"306\\\" cy=\\\"86 \\\"/>';\\n        stars[11] = '<circle r=\\\"2\\\" cx=\\\"297\\\" cy=\\\"116 \\\"/>';\\n        stars[12] = '<circle r=\\\"2\\\" cx=\\\"295\\\" cy=\\\"106 \\\"/>';\\n        string\\n            memory close = '<path d=\\\"m386 , 116 L 377, 115 L 374, 128 L 365, 144 L 334, 132 L  319, 125 L 297 116 L 295 106 L 306 86 L 315 87 L 324 89 L 359 109 L 377 115 M 365 144 L 359 162\\\" stroke=\\\"#fff\\\" opacity=\\\".5\\\" fill=\\\"none\\\"/></g>';\\n        return buildStar(stars, open, close, show, fullReveal);\\n    }\\n\\n    function Taurus(\\n        uint8 show,\\n        bool fullReveal\\n    ) public view returns (string memory, uint8 remaining) {\\n        string[] memory stars = new string[](12);\\n\\n        string\\n            memory open = '<g transform=\\\"translate(194,80), rotate(0) scale(0.7)\\\" fill=\\\"#fff\\\" opacity=\\\"0.8\\\">';\\n        stars[0] = '<circle r=\\\"2.86\\\" cx=\\\"262\\\" cy=\\\"184 \\\"/>';\\n        stars[1] = '<circle r=\\\"2.86\\\" cx=\\\"259\\\" cy=\\\"175 \\\"/>';\\n        stars[2] = '<circle r=\\\"2.86\\\" cx=\\\"228\\\" cy=\\\"154 \\\"/>';\\n        stars[3] = '<circle r=\\\"2.86\\\" cx=\\\"214\\\" cy=\\\"139 \\\"/>';\\n        stars[4] = '<circle r=\\\"2.86\\\" cx=\\\"214\\\" cy=\\\"129 \\\"/>';\\n        stars[5] = '<circle r=\\\"2.86\\\" cx=\\\"210\\\" cy=\\\"127 \\\"/>';\\n        stars[6] = '<circle r=\\\"2.86\\\" cx=\\\"210\\\" cy=\\\"121 \\\"/>';\\n        stars[7] = '<circle r=\\\"2.86\\\" cx=\\\"207\\\" cy=\\\"135 \\\"/>';\\n        stars[8] = '<circle r=\\\"2.86\\\" cx=\\\"203\\\" cy=\\\"100 \\\"/>';\\n        stars[9] = '<circle r=\\\"2.86\\\" cx=\\\"201\\\" cy=\\\"131 \\\"/>';\\n        stars[10] = '<circle r=\\\"2.86\\\" cx=\\\"184\\\" cy=\\\"67 \\\"/>';\\n        stars[11] = '<circle r=\\\"2.86\\\" cx=\\\"164\\\" cy=\\\"93 \\\"/>';\\n        string\\n            memory close = '<path d=\\\"m262 184 L 259 175 L 228 154 L 214 139 L 214 129 L 210 127 L 210 121 L 203 100 L 184 67 M 214 139 L 207 135 L 201 131 L 164 93\\\" stroke=\\\"#fff\\\" opacity=\\\".5\\\" fill=\\\"none\\\" stroke-width=\\\"1.43\\\"/></g>';\\n        return buildStar(stars, open, close, show, fullReveal);\\n    }\\n\\n    function Pegasus(\\n        uint8 show,\\n        bool fullReveal\\n    ) public view returns (string memory, uint8 remaining) {\\n        string[] memory stars = new string[](12);\\n\\n        string\\n            memory open = '<g transform=\\\"translate(322 150)\\\" fill=\\\"#fff\\\" opacity=\\\"0.8\\\">';\\n\\n        stars[0] = '<circle cx=\\\"-13\\\" r=\\\"2\\\"/>';\\n        stars[1] = '<circle cx=\\\"22\\\" cy=\\\"6\\\" r=\\\"2\\\"/>';\\n        stars[2] = '<circle cx=\\\"34\\\" cy=\\\"1\\\" r=\\\"2\\\"/>';\\n        stars[3] = '<circle cx=\\\"51\\\" cy=\\\"-7\\\" r=\\\"2\\\"/>';\\n        stars[4] = '<circle cx=\\\"-21\\\" cy=\\\"35\\\" r=\\\"2\\\"/>';\\n        stars[5] = '<circle cx=\\\"20\\\" cy=\\\"38\\\" r=\\\"2\\\"/>';\\n        stars[6] = '<circle cx=\\\"35\\\" cy=\\\"50\\\" r=\\\"2\\\"/>';\\n        stars[7] = '<circle cx=\\\"54\\\" cy=\\\"60\\\" r=\\\"2\\\"/>';\\n        stars[8] = '<circle cx=\\\"70\\\" cy=\\\"50\\\" r=\\\"2\\\"/>';\\n        stars[9] = '<circle cx=\\\"31\\\" cy=\\\"18\\\" r=\\\"2\\\"/>';\\n        stars[10] = '<circle cx=\\\"54\\\" cy=\\\"13\\\" r=\\\"2\\\"/>';\\n        stars[11] = '<circle cx=\\\"66\\\" cy=\\\"12\\\" r=\\\"2\\\"/>';\\n        string\\n            memory close = '<path d=\\\"M70 50 54 60 35 50 20 38l-41-3 8-35 35 6-2 32m46-26-12 1-23 5-9-12 12-5 17-8\\\" fill=\\\"none\\\" stroke=\\\"#fff\\\" opacity=\\\".5\\\"/></g>';\\n\\n        return buildStar(stars, open, close, show, fullReveal);\\n    }\\n\\n    function UrsaMinor(\\n        uint8 show,\\n        bool fullReveal\\n    ) public view returns (string memory, uint8 remaining) {\\n        string[] memory stars = new string[](7);\\n\\n        string\\n            memory open = '<g transform=\\\"translate(320,130), rotate(-30)\\\" fill=\\\"#fff\\\" opacity=\\\"0.8\\\">';\\n        stars[0] = '<circle cx=\\\"0\\\" cy=\\\"00\\\" r=\\\"2\\\" />';\\n        stars[1] = '<circle cx=\\\"-6\\\" cy=\\\"20\\\" r=\\\"2\\\" />';\\n        stars[2] = '<circle cx=\\\"-9\\\" cy=\\\"40\\\" r=\\\"2\\\" />';\\n        stars[3] = '<circle cx=\\\"-3\\\" cy=\\\"60\\\" r=\\\"2\\\" />';\\n        stars[4] = '<circle cx=\\\"-18\\\" cy=\\\"70\\\" r=\\\"2\\\"/>';\\n        stars[5] = '<circle cx=\\\"-12\\\" cy=\\\"92\\\" r=\\\"2\\\"/>';\\n        stars[6] = '<circle cx=\\\"8\\\" cy=\\\"91\\\" r=\\\"2\\\" />';\\n        string\\n            memory close = '<path d=\\\"m 0 00 L -6 20 L -9 40 L -3 60 L -18 70 L -12 92 L 8 91 L -3 60\\\" fill=\\\"none\\\" stroke=\\\"white\\\" opacity=\\\".5\\\"/></g>';\\n        return buildStar(stars, open, close, show, fullReveal);\\n    }\\n\\n    function Cygnus(\\n        uint8 show,\\n        bool fullReveal\\n    ) public view returns (string memory, uint8 remaining) {\\n        string[] memory stars = new string[](6);\\n        string\\n            memory open = '<g transform=\\\"translate(134, -70) scale(3)\\\" fill=\\\"#fff\\\" opacity=\\\"0.8\\\">';\\n        stars[0] = '<circle r=\\\"0.66\\\" cx=\\\"87.000\\\" cy=\\\"76.000\\\"/>';\\n        stars[1] = '<circle r=\\\"0.66\\\" cx=\\\"72.000\\\" cy=\\\"76.000\\\"/>';\\n        stars[2] = '<circle r=\\\"0.66\\\" cx=\\\"62.000\\\" cy=\\\"93.000\\\"/>';\\n        stars[3] = '<circle r=\\\"0.66\\\" cx=\\\"61.000\\\" cy=\\\"64.000\\\"/>';\\n        stars[4] = '<circle r=\\\"0.66\\\" cx=\\\"59.000\\\" cy=\\\"80.000\\\"/>';\\n        stars[5] = '<circle r=\\\"0.66\\\" cx=\\\"49.000\\\" cy=\\\"79.000\\\"/>';\\n        string\\n            memory close = '<path d=\\\"m87 76 L 72 76 L 59 80 L 49 79 M 62 93 L 59 80 L 61 64\\\" stroke-width=\\\"0.333\\\" fill=\\\"none\\\" stroke=\\\"#fff\\\" opacity=\\\".5\\\"/></g>';\\n        return buildStar(stars, open, close, show, fullReveal);\\n    }\\n}\\n\",\"keccak256\":\"0xe49dd7b4abf70cfdb0b85ee6f7ee6f9eceb2fba75a28c3055564d95d34555a8a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6158d561003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101255760003560e01c80635bffdde6116100bc57806398d834701161008b578063bca2680211610070578063bca268021461024b578063c0ae6ac81461025e578063d5e884e11461027157600080fd5b806398d8347014610225578063b802f4e91461023857600080fd5b80635bffdde6146101d95780636f16d5c4146101ec5780638391883c146101ff5780639560162f1461021257600080fd5b80633aa9830f116100f85780633aa9830f1461018d578063424ee33f146101a0578063551d56da146101b35780635ba60bab146101c657600080fd5b80630614f4f91461012a5780631f06f89c146101545780631f52809b1461016757806337449d941461017a575b600080fd5b61013d61013836600461343c565b610284565b60405161014b929190613493565b60405180910390f35b61013d61016236600461343c565b610420565b61013d61017536600461343c565b610654565b61013d61018836600461343c565b6108c7565b61013d61019b36600461343c565b610c0f565b61013d6101ae36600461343c565b610f57565b61013d6101c136600461343c565b61121f565b61013d6101d436600461343c565b6113e4565b61013d6101e736600461343c565b6116f5565b61013d6101fa36600461343c565b611cff565b61013d61020d36600461343c565b612125565b61013d6102203660046134d1565b612436565b61013d6102333660046135c4565b61258a565b61013d61024636600461343c565b6126b0565b61013d61025936600461343c565b612989565b61013d61026c36600461343c565b612df5565b61013d61027f36600461343c565b6131ab565b60408051600580825260c082019092526060916000918291816020015b60608152602001906001900390816102a157905050905060006040518060800160405280604781526020016147e7604791399050604051806060016040528060228152602001613ddc6022913982600081518110610301576103016136f0565b60200260200101819052506040518060600160405280602281526020016152cf6022913982600181518110610338576103386136f0565b6020026020010181905250604051806060016040528060228152602001615269602291398260028151811061036f5761036f6136f0565b602002602001018190525060405180606001604052806022815260200161514a60229139826003815181106103a6576103a66136f0565b60200260200101819052506040518060600160405280602181526020016145cd60219139826004815181106103dd576103dd6136f0565b602002602001018190525060006040518060a0016040528060748152602001613e8b6074913990506104128383838a8a61258a565b945094505050509250929050565b60408051600880825261012082019092526060916000918291816020015b606081526020019060019003908161043e57905050905060006040518060800160405280604681526020016138e260469139905060405180606001604052806022815260200161422b602291398260008151811061049e5761049e6136f0565b6020026020010181905250604051806060016040528060228152602001614fcd60229139826001815181106104d5576104d56136f0565b602002602001018190525060405180606001604052806022815260200161473e602291398260028151811061050c5761050c6136f0565b60200260200101819052506040518060600160405280602281526020016145ee6022913982600381518110610543576105436136f0565b6020026020010181905250604051806060016040528060228152602001614a91602291398260048151811061057a5761057a6136f0565b602002602001018190525060405180606001604052806022815260200161531360229139826005815181106105b1576105b16136f0565b602002602001018190525060405180606001604052806022815260200161587e60229139826006815181106105e8576105e86136f0565b60200260200101819052506040518060600160405280602281526020016157f2602291398260078151811061061f5761061f6136f0565b602002602001018190525060006040518060e0016040528060a5815260200161484f60a5913990506104128383838a8a61258a565b60408051600680825260e082019092526060916000918291816020015b60608152602001906001900390816106715790505090506000604051806080016040528060478152602001614ceb6047913990506040518060400160405280602081526020017f3c636972636c652063783d222d3330222063793d2236302220723d2232222f3e815250826000815181106106ee576106ee6136f0565b60200260200101819052506040518060400160405280602081526020017f3c636972636c652063783d222d3130222063793d2234352220723d2232222f3e81525082600181518110610742576107426136f0565b60200260200101819052506040518060400160405280601d81526020017f3c636972636c652063783d2235222063793d22302220723d2232222f3e00000081525082600281518110610796576107966136f0565b60200260200101819052506040518060400160405280601f81526020017f3c636972636c652063783d223535222063793d2231302220723d2232222f3e00815250826003815181106107ea576107ea6136f0565b60200260200101819052506040518060400160405280601f81526020017f3c636972636c652063783d223830222063793d2233302220723d2232222f3e008152508260048151811061083e5761083e6136f0565b60200260200101819052506040518060400160405280601f81526020017f3c636972636c652063783d223835222063793d2234352220723d2232222f3e0081525082600581518110610892576108926136f0565b602002602001018190525060006040518060a00160405280606781526020016157486067913990506104128383838a8a61258a565b60408051600d8082526101c082019092526060916000918291816020015b60608152602001906001900390816108e557905050905060006040518060800160405280604481526020016151066044913990506040518060600160405280602281526020016152f16022913982600081518110610945576109456136f0565b6020026020010181905250604051806060016040528060228152602001615247602291398260018151811061097c5761097c6136f0565b6020026020010181905250604051806060016040528060228152602001614ca860229139826002815181106109b3576109b36136f0565b6020026020010181905250604051806060016040528060228152602001614d3260229139826003815181106109ea576109ea6136f0565b6020026020010181905250604051806060016040528060228152602001613ca06022913982600481518110610a2157610a216136f0565b6020026020010181905250604051806060016040528060228152602001613dfe6022913982600581518110610a5857610a586136f0565b60200260200101819052506040518060600160405280602281526020016139286022913982600681518110610a8f57610a8f6136f0565b6020026020010181905250604051806060016040528060218152602001614f696021913982600781518110610ac657610ac66136f0565b60200260200101819052506040518060600160405280602281526020016147816022913982600881518110610afd57610afd6136f0565b6020026020010181905250604051806060016040528060218152602001614b3b6021913982600981518110610b3457610b346136f0565b60200260200101819052506040518060600160405280602181526020016146106021913982600a81518110610b6b57610b6b6136f0565b60200260200101819052506040518060600160405280602281526020016137eb6022913982600b81518110610ba257610ba26136f0565b60200260200101819052506040518060600160405280602281526020016141e86022913982600c81518110610bd957610bd96136f0565b6020026020010181905250600060405180610100016040528060d0815260200161501460d0913990506104128383838a8a61258a565b60408051600d8082526101c082019092526060916000918291816020015b6060815260200190600190039081610c2d57905050905060006040518060800160405280604781526020016144d4604791399050604051806060016040528060228152602001614c656022913982600081518110610c8d57610c8d6136f0565b60200260200101819052506040518060600160405280602281526020016157266022913982600181518110610cc457610cc46136f0565b6020026020010181905250604051806060016040528060228152602001613b8a6022913982600281518110610cfb57610cfb6136f0565b60200260200101819052506040518060600160405280602281526020016147a36022913982600381518110610d3257610d326136f0565b6020026020010181905250604051806060016040528060228152602001613c126022913982600481518110610d6957610d696136f0565b60200260200101819052506040518060600160405280602281526020016144226022913982600581518110610da057610da06136f0565b6020026020010181905250604051806060016040528060228152602001614af76022913982600681518110610dd757610dd76136f0565b6020026020010181905250604051806060016040528060228152602001614c436022913982600781518110610e0e57610e0e6136f0565b6020026020010181905250604051806060016040528060228152602001614c006022913982600881518110610e4557610e456136f0565b60200260200101819052506040518060600160405280602281526020016143386022913982600981518110610e7c57610e7c6136f0565b60200260200101819052506040518060600160405280602281526020016143166022913982600a81518110610eb357610eb36136f0565b60200260200101819052506040518060600160405280602281526020016146316022913982600b81518110610eea57610eea6136f0565b6020026020010181905250604051806060016040528060228152602001613bac6022913982600c81518110610f2157610f216136f0565b6020026020010181905250600060405180610100016040528060c6815260200161467860c6913990506104128383838a8a61258a565b60408051600780825261010082019092526060916000918291816020015b6060815260200190600190039081610f75579050509050600060405180608001604052806049815260200161448b6049913990506040518060400160405280601f81526020017f3c636972636c652063783d2230222063793d2230302220723d223222202f3e0081525082600081518110610ff257610ff26136f0565b60200260200101819052506040518060400160405280602081526020017f3c636972636c652063783d222d36222063793d2232302220723d223222202f3e81525082600181518110611046576110466136f0565b60200260200101819052506040518060400160405280602081526020017f3c636972636c652063783d222d39222063793d2234302220723d223222202f3e8152508260028151811061109a5761109a6136f0565b60200260200101819052506040518060400160405280602081526020017f3c636972636c652063783d222d33222063793d2236302220723d223222202f3e815250826003815181106110ee576110ee6136f0565b60200260200101819052506040518060400160405280602081526020017f3c636972636c652063783d222d3138222063793d2237302220723d2232222f3e81525082600481518110611142576111426136f0565b60200260200101819052506040518060400160405280602081526020017f3c636972636c652063783d222d3132222063793d2239322220723d2232222f3e81525082600581518110611196576111966136f0565b60200260200101819052506040518060400160405280601f81526020017f3c636972636c652063783d2238222063793d2239312220723d223222202f3e00815250826006815181106111ea576111ea6136f0565b602002602001018190525060006040518060a0016040528060778152602001613aa06077913990506104128383838a8a61258a565b60408051600680825260e082019092526060916000918291816020015b606081526020019060019003908161123c579050509050600060405180608001604052806046815260200161389c6046913990506040518060600160405280602a8152602001614f3f602a91398260008151811061129c5761129c6136f0565b60200260200101819052506040518060600160405280602a81526020016148f4602a9139826001815181106112d3576112d36136f0565b60200260200101819052506040518060600160405280602a815260200161394a602a91398260028151811061130a5761130a6136f0565b60200260200101819052506040518060600160405280602a81526020016151d7602a913982600381518110611341576113416136f0565b60200260200101819052506040518060600160405280602a8152602001614174602a913982600481518110611378576113786136f0565b60200260200101819052506040518060600160405280602a8152602001613d08602a9139826005815181106113af576113af6136f0565b602002602001018190525060006040518060c00160405280608281526020016139956082913990506104128383838a8a61258a565b60408051600c8082526101a082019092526060916000918291816020015b60608152602001906001900390816114025790505090506000604051806080016040528060518152602001613fb66051913990506040518060600160405280602581526020016143fd6025913982600081518110611462576114626136f0565b60200260200101819052506040518060600160405280602581526020016151906025913982600181518110611499576114996136f0565b6020026020010181905250604051806060016040528060258152602001614f1a60259139826002815181106114d0576114d06136f0565b60200260200101819052506040518060600160405280602581526020016156736025913982600381518110611507576115076136f0565b6020026020010181905250604051806060016040528060258152602001613c7b602591398260048151811061153e5761153e6136f0565b6020026020010181905250604051806060016040528060258152602001614fef6025913982600581518110611575576115756136f0565b602002602001018190525060405180606001604052806025815260200161570160259139826006815181106115ac576115ac6136f0565b6020026020010181905250604051806060016040528060258152602001613a5960259139826007815181106115e3576115e36136f0565b6020026020010181905250604051806060016040528060258152602001613cc2602591398260088151811061161a5761161a6136f0565b6020026020010181905250604051806060016040528060258152602001614e496025913982600981518110611651576116516136f0565b602002602001018190525060405180606001604052806024815260200161516c6024913982600a81518110611688576116886136f0565b60200260200101819052506040518060600160405280602481526020016145a96024913982600b815181106116bf576116bf6136f0565b6020026020010181905250600060405180610100016040528060c9815260200161424d60c9913990506104128383838a8a61258a565b6060600080604051806080016040528060488152602001613832604891396040805160148082526102a0820190925291925060009190816020015b6060815260200190600190039081611730579050509050604051806060016040528060218152602001614d9b6021913981600081518110611773576117736136f0565b602002602001018190525060405180606001604052806021815260200161539c60219139816001815181106117aa576117aa6136f0565b6020026020010181905250604051806060016040528060218152602001614c2260219139816002815181106117e1576117e16136f0565b60200260200101819052506040518060600160405280602181526020016153bd6021913981600381518110611818576118186136f0565b6020026020010181905250604051806060016040528060218152602001614b5c602191398160048151811061184f5761184f6136f0565b60200260200101819052506040518060600160405280602181526020016143966021913981600581518110611886576118866136f0565b6020026020010181905250604051806060016040528060218152602001613ce760219139816006815181106118bd576118bd6136f0565b602002602001018190525060405180606001604052806021815260200161535660219139816007815181106118f4576118f46136f0565b6020026020010181905250604051806060016040528060218152602001614cca602191398160088151811061192b5761192b6136f0565b60200260200101819052506040518060400160405280602081526020017f3c636972636c6520723d2232222063783d223937222063793d22343630222f3e8152508160098151811061197f5761197f6136f0565b60200260200101819052506040518060400160405280602081526020017f3c636972636c6520723d2232222063783d223937222063793d22343231222f3e81525081600a815181106119d3576119d36136f0565b60200260200101819052506040518060400160405280602081526020017f3c636972636c6520723d2232222063783d223931222063793d22353139222f3e81525081600b81518110611a2757611a276136f0565b60200260200101819052506040518060400160405280602081526020017f3c636972636c6520723d2232222063783d223931222063793d22343533222f3e81525081600c81518110611a7b57611a7b6136f0565b60200260200101819052506040518060400160405280602081526020017f3c636972636c6520723d2232222063783d223930222063793d22343236222f3e81525081600d81518110611acf57611acf6136f0565b60200260200101819052506040518060400160405280602081526020017f3c636972636c6520723d2232222063783d223838222063793d22353037222f3e81525081600e81518110611b2357611b236136f0565b60200260200101819052506040518060400160405280602081526020017f3c636972636c6520723d2232222063783d223831222063793d22343234222f3e81525081600f81518110611b7757611b776136f0565b60200260200101819052506040518060400160405280602081526020017f3c636972636c6520723d2232222063783d223731222063793d22353135222f3e81525081601081518110611bcb57611bcb6136f0565b60200260200101819052506040518060400160405280602081526020017f3c636972636c6520723d2232222063783d223636222063793d22343135222f3e81525081601181518110611c1f57611c1f6136f0565b60200260200101819052506040518060400160405280602081526020017f3c636972636c6520723d2232222063783d223632222063793d22343436222f3e81525081601281518110611c7357611c736136f0565b60200260200101819052506040518060400160405280602081526020017f3c636972636c6520723d2232222063783d223432222063793d22343638222f3e81525081601381518110611cc757611cc76136f0565b602002602001018190525060006040518061018001604052806101418152602001615403610141913990506104128284838a8a61258a565b60408051601180825261024082019092526060916000918291816020015b6060815260200190600190039081611d1d5790505090506000604051806080016040528060528152602001613b176052913990506040518060600160405280602581526020016153de6025913982600081518110611d7d57611d7d6136f0565b60200260200101819052506040518060600160405280602581526020016153776025913982600181518110611db457611db46136f0565b602002602001018190525060405180606001604052806025815260200161491e6025913982600281518110611deb57611deb6136f0565b6020026020010181905250604051806060016040528060258152602001613c346025913982600381518110611e2257611e226136f0565b60200260200101819052506040518060600160405280602581526020016145846025913982600481518110611e5957611e596136f0565b60200260200101819052506040518060600160405280602581526020016146536025913982600581518110611e9057611e906136f0565b60200260200101819052506040518060600160405280602581526020016144666025913982600681518110611ec757611ec76136f0565b6020026020010181905250604051806060016040528060258152602001614e6e6025913982600781518110611efe57611efe6136f0565b60200260200101819052506040518060600160405280602581526020016141c36025913982600881518110611f3557611f356136f0565b6020026020010181905250604051806060016040528060258152602001614e246025913982600981518110611f6c57611f6c6136f0565b60200260200101819052506040518060600160405280602581526020016152226025913982600a81518110611fa357611fa36136f0565b6020026020010181905250604051806060016040528060258152602001614dff6025913982600b81518110611fda57611fda6136f0565b602002602001018190525060405180606001604052806025815260200161419e6025913982600c81518110612011576120116136f0565b6020026020010181905250604051806060016040528060258152602001614d766025913982600d81518110612048576120486136f0565b602002602001018190525060405180606001604052806025815260200161380d6025913982600e8151811061207f5761207f6136f0565b60200260200101819052506040518060600160405280602581526020016143d86025913982600f815181106120b6576120b66136f0565b60200260200101819052506040518060600160405280602581526020016156ba60259139826010815181106120ed576120ed6136f0565b6020026020010181905250600060405180610140016040528061010d815260200161556661010d913990506104128383838a8a61258a565b60408051600c8082526101a082019092526060916000918291816020015b60608152602001906001900390816121435790505090506000604051806080016040528060488152602001614a4960489139905060405180606001604052806022815260200161528b60229139826000815181106121a3576121a36136f0565b602002602001018190525060405180606001604052806022815260200161444460229139826001815181106121da576121da6136f0565b60200260200101819052506040518060600160405280602281526020016140296022913982600281518110612211576122116136f0565b6020026020010181905250604051806060016040528060228152602001614eb56022913982600381518110612248576122486136f0565b60200260200101819052506040518060600160405280602281526020016147c5602291398260048151811061227f5761227f6136f0565b60200260200101819052506040518060600160405280602281526020016151b560229139826005815181106122b6576122b66136f0565b60200260200101819052506040518060600160405280602281526020016152ad60229139826006815181106122ed576122ed6136f0565b60200260200101819052506040518060600160405280602281526020016141526022913982600781518110612324576123246136f0565b6020026020010181905250604051806060016040528060228152602001613a7e602291398260088151811061235b5761235b6136f0565b60200260200101819052506040518060600160405280602281526020016150e46022913982600981518110612392576123926136f0565b6020026020010181905250604051806060016040528060228152602001613bf06022913982600a815181106123c9576123c96136f0565b6020026020010181905250604051806060016040528060228152602001614dbc6022913982600b81518110612400576124006136f0565b6020026020010181905250600060405180610120016040528060e4815260200161496560e4913990506104128383838a8a61258a565b6060600080612446600d87613706565b90508060ff166000036124675761245d8486610654565b9250925050612582565b8060ff1660010361247c5761245d84866116f5565b8060ff166002036124915761245d84866126b0565b8060ff166003036124a65761245d8486610c0f565b8060ff166004036124bb5761245d8486611cff565b8060ff166005036124d05761245d8486612df5565b8060ff166006036124e55761245d8486610420565b8060ff166007036124fa5761245d8486612125565b8060ff1660080361250f5761245d84866131ab565b8060ff166009036125245761245d8486610284565b8060ff16600a036125395761245d84866108c7565b8060ff16600b0361254e5761245d84866113e4565b8060ff16600c036125635761245d8486612989565b8060ff16600d036125785761245d8486610f57565b61245d848661121f565b935093915050565b60606000828061259d575086518460ff16115b156125a757865193505b604080516020808201835260008252915186926125c89183918b9101613728565b604051602081830303815290604052905060005b8660ff168160ff16101561264b57818a8260ff1681518110612600576126006136f0565b6020026020010151604051602001612619929190613728565b604051602081830303815290604052915082806126359061376d565b93505080806126439061378a565b9150506125dc565b5088518660ff160361268057808760405160200161266a929190613728565b60405160208183030381529060405290506126a3565b8060405160200161269191906137a9565b60405160208183030381529060405290505b9890975095505050505050565b60408051600b80825261018082019092526060916000918291816020015b60608152602001906001900390816126ce579050509050600060405180608001604052806048815260200161451b604891399050604051806060016040528060218152602001615335602191398260008151811061272e5761272e6136f0565b6020026020010181905250604051806060016040528060218152602001614fac6021913982600181518110612765576127656136f0565b6020026020010181905250604051806060016040528060218152602001614760602191398260028151811061279c5761279c6136f0565b602002602001018190525060405180606001604052806021815260200161420a60219139826003815181106127d3576127d36136f0565b6020026020010181905250604051806060016040528060218152602001613a38602191398260048151811061280a5761280a6136f0565b60200260200101819052506040518060600160405280602181526020016152016021913982600581518110612841576128416136f0565b6020026020010181905250604051806060016040528060218152602001614ef96021913982600681518110612878576128786136f0565b6020026020010181905250604051806060016040528060218152602001614c8760219139826007815181106128af576128af6136f0565b60200260200101819052506040518060600160405280602181526020016157d160219139826008815181106128e6576128e66136f0565b6020026020010181905250604051806060016040528060218152602001613974602191398260098151811061291d5761291d6136f0565b6020026020010181905250604051806060016040528060218152602001613a176021913982600a81518110612954576129546136f0565b602002602001018190525060006040518060e0016040528060b78152602001613eff60b7913990506104128383838a8a61258a565b60408051600c8082526101a082019092526060916000918291816020015b60608152602001906001900390816129a757905050905060006040518060600160405280603c815260200161435a603c913990506040518060400160405280601881526020017f3c636972636c652063783d222d31332220723d2232222f3e000000000000000081525082600081518110612a2457612a246136f0565b60200260200101819052506040518060400160405280601e81526020017f3c636972636c652063783d223232222063793d22362220723d2232222f3e000081525082600181518110612a7857612a786136f0565b60200260200101819052506040518060400160405280601e81526020017f3c636972636c652063783d223334222063793d22312220723d2232222f3e000081525082600281518110612acc57612acc6136f0565b60200260200101819052506040518060400160405280601f81526020017f3c636972636c652063783d223531222063793d222d372220723d2232222f3e0081525082600381518110612b2057612b206136f0565b60200260200101819052506040518060400160405280602081526020017f3c636972636c652063783d222d3231222063793d2233352220723d2232222f3e81525082600481518110612b7457612b746136f0565b60200260200101819052506040518060400160405280601f81526020017f3c636972636c652063783d223230222063793d2233382220723d2232222f3e0081525082600581518110612bc857612bc86136f0565b60200260200101819052506040518060400160405280601f81526020017f3c636972636c652063783d223335222063793d2235302220723d2232222f3e0081525082600681518110612c1c57612c1c6136f0565b60200260200101819052506040518060400160405280601f81526020017f3c636972636c652063783d223534222063793d2236302220723d2232222f3e0081525082600781518110612c7057612c706136f0565b60200260200101819052506040518060400160405280601f81526020017f3c636972636c652063783d223730222063793d2235302220723d2232222f3e0081525082600881518110612cc457612cc46136f0565b60200260200101819052506040518060400160405280601f81526020017f3c636972636c652063783d223331222063793d2231382220723d2232222f3e0081525082600981518110612d1857612d186136f0565b60200260200101819052506040518060400160405280601f81526020017f3c636972636c652063783d223534222063793d2231332220723d2232222f3e0081525082600a81518110612d6c57612d6c6136f0565b60200260200101819052506040518060400160405280601f81526020017f3c636972636c652063783d223636222063793d2231322220723d2232222f3e0081525082600b81518110612dc057612dc06136f0565b602002602001018190525060006040518060c0016040528060838152602001614b7d6083913990506104128383838a8a61258a565b60408051600f80825261020082019092526060916000918291816020015b6060815260200190600190039081612e135790505090506000604051806080016040528060498152602001613e4260499139905060405180606001604052806022815260200161387a6022913982600081518110612e7357612e736136f0565b6020026020010181905250604051806060016040528060228152602001613e206022913982600181518110612eaa57612eaa6136f0565b60200260200101819052506040518060600160405280602281526020016156986022913982600281518110612ee157612ee16136f0565b6020026020010181905250604051806060016040528060228152602001614f8a6022913982600381518110612f1857612f186136f0565b6020026020010181905250604051806060016040528060228152602001614d546022913982600481518110612f4f57612f4f6136f0565b60200260200101819052506040518060600160405280602281526020016140076022913982600581518110612f8657612f866136f0565b60200260200101819052506040518060600160405280602281526020016156df6022913982600681518110612fbd57612fbd6136f0565b6020026020010181905250604051806060016040528060228152602001614b196022913982600781518110612ff457612ff46136f0565b6020026020010181905250604051806060016040528060228152602001614ed7602291398260088151811061302b5761302b6136f0565b60200260200101819052506040518060600160405280602281526020016155446022913982600981518110613062576130626136f0565b6020026020010181905250604051806060016040528060228152602001614e936022913982600a81518110613099576130996136f0565b6020026020010181905250604051806060016040528060228152602001614ad56022913982600b815181106130d0576130d06136f0565b60200260200101819052506040518060600160405280602281526020016141306022913982600c81518110613107576131076136f0565b60200260200101819052506040518060600160405280602281526020016149436022913982600d8151811061313e5761313e6136f0565b6020026020010181905250604051806060016040528060228152602001613bce6022913982600e81518110613175576131756136f0565b6020026020010181905250600060405180610120016040528060e5815260200161404b60e5913990506104128383838a8a61258a565b60408051600980825261014082019092526060916000918291816020015b60608152602001906001900390816131c957905050905060006040518060800160405280604881526020016158366048913990506040518060600160405280602281526020016157af6022913982600081518110613229576132296136f0565b6020026020010181905250604051806060016040528060228152602001614ab36022913982600181518110613260576132606136f0565b60200260200101819052506040518060600160405280602281526020016158146022913982600281518110613297576132976136f0565b6020026020010181905250604051806060016040528060228152602001613c5960229139826003815181106132ce576132ce6136f0565b60200260200101819052506040518060600160405280602181526020016143b76021913982600481518110613305576133056136f0565b6020026020010181905250604051806060016040528060218152602001614dde602191398260058151811061333c5761333c6136f0565b60200260200101819052506040518060600160405280602181526020016145636021913982600681518110613373576133736136f0565b602002602001018190525060405180606001604052806021815260200161482e60219139826007815181106133aa576133aa6136f0565b6020026020010181905250604051806060016040528060218152602001613b6960219139826008815181106133e1576133e16136f0565b602002602001018190525060006040518060e0016040528060aa8152602001613d3260aa913990506104128383838a8a61258a565b803560ff8116811461342757600080fd5b919050565b8035801515811461342757600080fd5b6000806040838503121561344f57600080fd5b61345883613416565b91506134666020840161342c565b90509250929050565b60005b8381101561348a578181015183820152602001613472565b50506000910152565b60408152600083518060408401526134b281606085016020880161346f565b60ff93909316602083015250601f91909101601f191601606001919050565b6000806000606084860312156134e657600080fd5b833592506134f66020850161342c565b915061350460408501613416565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561354c5761354c61350d565b604052919050565b600082601f83011261356557600080fd5b813567ffffffffffffffff81111561357f5761357f61350d565b613592601f8201601f1916602001613523565b8181528460208386010111156135a757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156135dc57600080fd5b853567ffffffffffffffff808211156135f457600080fd5b818801915088601f83011261360857600080fd5b813560208282111561361c5761361c61350d565b8160051b61362b828201613523565b928352848101820192828101908d85111561364557600080fd5b83870192505b84831015613681578235868111156136635760008081fd5b6136718f86838b0101613554565b835250918301919083019061364b565b9a5050508901359250508082111561369857600080fd5b6136a489838a01613554565b955060408801359150808211156136ba57600080fd5b506136c788828901613554565b9350506136d660608701613416565b91506136e46080870161342c565b90509295509295909350565b634e487b7160e01b600052603260045260246000fd5b60008261372357634e487b7160e01b600052601260045260246000fd5b500690565b6000835161373a81846020880161346f565b83519083019061374e81836020880161346f565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600060ff82168061378057613780613757565b6000190192915050565b600060ff821660ff81036137a0576137a0613757565b60010192915050565b600082516137bb81846020870161346f565b7f3c2f673e0000000000000000000000000000000000000000000000000000000092019182525060040191905056fe3c636972636c6520723d2232222063783d22323937222063793d2231313620222f3e3c636972636c6520723d22322e3836222063783d22343235222063793d2235343120222f3e3c67207472616e73666f726d3d227472616e736c617465283233342c2d323930292c20726f74617465283029222066696c6c3d222366666622206f7061636974793d22302e38223e3c636972636c6520723d2232222063783d22353133222063793d2232353620222f3e3c67207472616e73666f726d3d227472616e736c617465283133342c202d373029207363616c65283329222066696c6c3d222366666622206f7061636974793d22302e38223e3c67207472616e73666f726d3d227472616e736c61746528342c2d313230292c20726f74617465283029222066696c6c3d222366666622206f7061636974793d22302e38223e3c636972636c6520723d2232222063783d22333334222063793d2231333220222f3e3c636972636c6520723d22302e3636222063783d2236322e303030222063793d2239332e303030222f3e3c636972636c6520723d2232222063783d22313931222063793d22353131222f3e3c7061746820643d226d3837203736204c203732203736204c203539203830204c203439203739204d203632203933204c203539203830204c20363120363422207374726f6b652d77696474683d22302e333333222066696c6c3d226e6f6e6522207374726f6b653d222366666622206f7061636974793d222e35222f3e3c2f673e3c636972636c6520723d2232222063783d22313839222063793d22353139222f3e3c636972636c6520723d2232222063783d22323331222063793d22343134222f3e3c636972636c6520723d22322e3836222063783d22323037222063793d2231333520222f3e3c636972636c6520723d2232222063783d22323231222063793d2233343220222f3e3c7061746820643d226d2030203030204c202d36203230204c202d39203430204c202d33203630204c202d3138203730204c202d3132203932204c2038203931204c202d33203630222066696c6c3d226e6f6e6522207374726f6b653d22776869746522206f7061636974793d222e35222f3e3c2f673e3c67207472616e73666f726d3d227472616e736c6174652831342c2d313730292c20726f74617465283029207363616c6528302e3729222066696c6c3d222366666622206f7061636974793d22302e38223e3c636972636c6520723d2232222063783d223631222063793d2233343420222f3e3c636972636c6520723d2232222063783d22333534222063793d2235313720222f3e3c636972636c6520723d2232222063783d22333635222063793d2234373220222f3e3c636972636c6520723d2232222063783d22353133222063793d2232383120222f3e3c636972636c6520723d2232222063783d22313938222063793d2232343220222f3e3c636972636c6520723d2232222063783d22333339222063793d2234333520222f3e3c636972636c6520723d22322e3836222063783d22343832222063793d2235303220222f3e3c636972636c6520723d2232222063783d22313032222063793d2232363520222f3e3c636972636c6520723d22322e3836222063783d22323134222063793d2231323920222f3e3c636972636c6520723d2232222063783d22333539222063793d2231303920222f3e3c636972636c6520723d22322e3836222063783d22323033222063793d2231303020222f3e3c636972636c6520723d2232222063783d22313238222063793d22343431222f3e3c636972636c6520723d22302e3636222063783d2234392e303030222063793d2237392e303030222f3e3c7061746820643d226d3130382c323234204c2039342c20323236204c2039322c20323533204c203130322c20323635204c2031323020323634204c202031333620323736204c20383020333234204c203631203334344c20363420333037204c2031303220323635204d20383020333234204c203132302032363422207374726f6b653d222366666622206f7061636974793d222e35222066696c6c3d226e6f6e65222f3e3c2f673e3c636972636c6520723d2232222063783d22343931222063793d2231343320222f3e3c636972636c6520723d2232222063783d22333539222063793d2231363220222f3e3c636972636c6520723d2232222063783d22353133222063793d2232363820222f3e3c67207472616e73666f726d3d227472616e736c617465282d3132312c2d313230292c20726f74617465283029222066696c6c3d222366666622206f7061636974793d22302e38223e3c7061746820643d226d34393120313433204c203434332c20313233204c2034333720313132204c20343138203838204d2034343220313233204c203434302031353720202022207374726f6b653d222366666622206f7061636974793d222e35222066696c6c3d226e6f6e65222f3e3c2f673e3c7061746820643d224d203235342c20343932204c203234312c20343938204c203232312c20353130204c203230322c353134204c203138392c20353139204c203139312c20353131204c203230312c343935204c203231322c20343831204c203233322c20343234204c2032333120343134204d203233322c20343234204c203235332c2034383322207374726f6b653d222366666622206f7061636974793d222e35222066696c6c3d226e6f6e65222f3e3c2f673e3c67207472616e73666f726d3d227472616e736c617465283139342c3830292c20726f74617465283029207363616c6528302e3729222066696c6c3d222366666622206f7061636974793d22302e38223e3c636972636c6520723d2232222063783d22343735222063793d2232373420222f3e3c636972636c6520723d2232222063783d22323438222063793d2232373620222f3e3c7061746820643d226d3431392c20333034204c203431302c20333133204c203430352c20333230204c203431352c20333332204c203433352c20333333204c20203435322c20333238204c203435362c20333134204c203435382c20323936204c203437352c20323734204c203438312c20323638204c203438392c20323634204c203531332c20323536204c203531302c20323438204d203531332c20323536204c203531332c20323638204c203531332032383122207374726f6b653d222366666622206f7061636974793d222e35222066696c6c3d226e6f6e65222f3e3c2f673e3c636972636c6520723d2232222063783d22343130222063793d2233313320222f3e3c636972636c6520723d2232222063783d22323233222063793d2232383520222f3e3c636972636c6520723d22302e3636222063783d2235392e303030222063793d2238302e303030222f3e3c636972636c6520723d22322e3836222063783d22343438222063793d2234303120222f3e3c636972636c6520723d22322e3836222063783d22343635222063793d2235333920222f3e3c636972636c6520723d2232222063783d22323935222063793d2231303620222f3e3c636972636c6520723d2232222063783d22323332222063793d22343234222f3e3c636972636c6520723d2232222063783d22333631222063793d2232373220222f3e3c7061746820643d226d32363220313834204c2032353920313735204c2032323820313534204c2032313420313339204c2032313420313239204c2032313020313237204c2032313020313231204c2032303320313030204c20313834203637204d2032313420313339204c2032303720313335204c2032303120313331204c2031363420393322207374726f6b653d222366666622206f7061636974793d222e35222066696c6c3d226e6f6e6522207374726f6b652d77696474683d22312e3433222f3e3c2f673e3c636972636c6520723d2232222063783d22323932222063793d2234383420222f3e3c636972636c6520723d2232222063783d22333032222063793d2234383020222f3e3c67207472616e73666f726d3d227472616e736c617465283332322031353029222066696c6c3d222366666622206f7061636974793d22302e38223e3c636972636c6520723d2232222063783d22313332222063793d22343735222f3e3c636972636c6520723d2232222063783d223934222063793d2232323620222f3e3c636972636c6520723d22322e3836222063783d22343135222063793d2235353320222f3e3c636972636c6520723d22322e3836222063783d22323632222063793d2231383420222f3e3c636972636c6520723d2232222063783d22333335222063793d2234373620222f3e3c636972636c6520723d2232222063783d22323531222063793d2232323520222f3e3c636972636c6520723d22322e3836222063783d22343731222063793d2234303020222f3e3c67207472616e73666f726d3d227472616e736c617465283332302c313330292c20726f74617465282d333029222066696c6c3d222366666622206f7061636974793d22302e38223e3c67207472616e73666f726d3d227472616e736c617465282d362c2d333030292c20726f74617465283029222066696c6c3d222366666622206f7061636974793d22302e38223e3c67207472616e73666f726d3d227472616e736c617465283131342c2d333030292c20726f74617465283029222066696c6c3d222366666622206f7061636974793d22302e38223e3c636972636c6520723d2232222063783d223830222063793d2233323420222f3e3c636972636c6520723d22322e3836222063783d22343735222063793d2234383420222f3e3c636972636c6520723d22322e3836222063783d22313634222063793d22393320222f3e3c636972636c6520723d2232222063783d22343138222063793d22383820222f3e3c636972636c6520723d2232222063783d22333335222063793d2233323120222f3e3c636972636c6520723d2232222063783d22333036222063793d22383620222f3e3c636972636c6520723d2232222063783d22323839222063793d2234393220222f3e3c636972636c6520723d22322e3836222063783d22343734222063793d2234313720222f3e3c7061746820643d224d3337382c20343036204c203333392c20343335204c203330322c20343539204c203330322c20343830204c2032393220343834204c203238392c20343932204c2033313920353334204c203332352c353135204c203334372c353132204c203335342c353137204c203337322c353330204d203330322c343539204c203333352c343736204c2033363520343732222066696c6c3d226e6f6e6522207374726f6b653d222366666622206f7061636974793d222e35222f3e3c2f673e3c636972636c6520723d2232222063783d22333335222063793d2233323920222f3e3c636972636c6520723d2232222063783d22323431222063793d22343938222f3e3c636972636c6520723d2232222063783d22333139222063793d2231323520222f3e3c636972636c6520723d2232222063783d22333437222063793d2235313220222f3e3c636972636c6520723d2232222063783d22323431222063793d2233323720222f3e3c67207472616e73666f726d3d227472616e736c617465282d3130362c3530292c20726f74617465283029222066696c6c3d222366666622206f7061636974793d22302e38223e3c636972636c6520723d2232222063783d223634222063793d2233303720222f3e3c7061746820643d224d203330392c20323837204c203331382c20323831204c203332342c20323736204c203333332c20323532204c203336312c203237322c203335362c20333037204c20203333352c20333231204c203333352c20333239204d203335362c20333037204c203333332c203235322022207374726f6b653d222366666622206f7061636974793d222e35222066696c6c3d226e6f6e65222f3e3c2f673e3c636972636c6520723d22302e3636222063783d2237322e303030222063793d2237362e303030222f3e3c636972636c6520723d22322e3836222063783d22343935222063793d2235343120222f3e3c636972636c6520723d2232222063783d22343035222063793d2233323020222f3e3c7061746820643d226d3232312c20333432204c203233312c20333234204c203234312c20333237204c203236312c20323936204c203234382c20323736204c20203234362c20323434204c203235312c20323235204d203234362c20323434204c203232352c20323439204c203139382c20323432204d203232352c20323439204c203232332c20323835204c203236312c20323936204d203232332c20323835204c2032303720323939204c203138382033333022207374726f6b653d222366666622206f7061636974793d222e35222066696c6c3d226e6f6e65222f3e3c2f673e3c67207472616e73666f726d3d227472616e736c617465283131342c2d313134292c20726f74617465283029222066696c6c3d222366666622206f7061636974793d22302e38223e3c636972636c6520723d2232222063783d22333333222063793d2232353220222f3e3c636972636c6520723d2232222063783d22313230222063793d2232363420222f3e3c636972636c6520723d2232222063783d22343135222063793d2233333220222f3e3c636972636c6520723d2232222063783d22333235222063793d2235313520222f3e3c636972636c6520723d2232222063783d22343536222063793d2233313420222f3e3c636972636c6520723d2232222063783d22333135222063793d22383720222f3e3c636972636c6520723d2232222063783d22313334222063793d22343537222f3e3c7061746820643d224d37302035302035342036302033352035302032302033386c2d34312d3320382d333520333520362d322033326d34362d32362d313220312d323320352d392d31322031322d352031372d38222066696c6c3d226e6f6e6522207374726f6b653d222366666622206f7061636974793d222e35222f3e3c2f673e3c636972636c6520723d2232222063783d22333032222063793d2234353920222f3e3c636972636c6520723d2232222063783d22313339222063793d22343832222f3e3c636972636c6520723d2232222063783d22333139222063793d2235333420222f3e3c636972636c6520723d2232222063783d22333738222063793d2234303620222f3e3c636972636c6520723d2232222063783d22323032222063793d22353134222f3e3c636972636c6520723d2232222063783d22333734222063793d2231323820222f3e3c636972636c6520723d2232222063783d22313030222063793d22343436222f3e3c67207472616e73666f726d3d227472616e736c617465283331362c313333292c20726f74617465283029222066696c6c3d222366666622206f7061636974793d22302e38223e3c636972636c6520723d2232222063783d22333635222063793d2231343420222f3e3c636972636c6520723d2232222063783d22343831222063793d2232363820222f3e3c636972636c6520723d22322e3836222063783d22343435222063793d2234313320222f3e3c636972636c6520723d2232222063783d22313639222063793d22343437222f3e3c636972636c6520723d2232222063783d22313838222063793d2233333020222f3e3c636972636c6520723d2232222063783d223932222063793d2232353320222f3e3c636972636c6520723d22322e3836222063783d22343534222063793d2234323520222f3e3c636972636c6520723d22322e3836222063783d22343539222063793d2234343520222f3e3c636972636c6520723d22322e3836222063783d22323031222063793d2231333120222f3e3c636972636c6520723d22322e3836222063783d22343638222063793d2234323720222f3e3c636972636c6520723d2232222063783d22343139222063793d2233303420222f3e3c636972636c6520723d2232222063783d22323436222063793d2232343420222f3e3c636972636c6520723d2232222063783d22343532222063793d2233323820222f3e3c636972636c6520723d2232222063783d22323132222063793d22343831222f3e3c636972636c6520723d22322e3836222063783d22323238222063793d2231353420222f3e3c636972636c6520723d22302e3636222063783d2238372e303030222063793d2237362e303030222f3e3c636972636c6520723d2232222063783d22333234222063793d22383920222f3e3c636972636c6520723d2232222063783d22343839222063793d2232363420222f3e3c636972636c6520723d2232222063783d22323533222063793d22343833222f3e3c636972636c6520723d2232222063783d22333536222063793d2233303720222f3e3c636972636c6520723d22322e3836222063783d22323130222063793d2231323720222f3e3c7061746820643d226d333836202c20313136204c203337372c20313135204c203337342c20313238204c203336352c20313434204c203333342c20313332204c20203331392c20313235204c2032393720313136204c2032393520313036204c20333036203836204c20333135203837204c20333234203839204c2033353920313039204c2033373720313135204d2033363520313434204c203335392031363222207374726f6b653d222366666622206f7061636974793d222e35222066696c6c3d226e6f6e65222f3e3c2f673e3c636972636c6520723d2232222063783d22323037222063793d2232393920222f3e3c67207472616e73666f726d3d227472616e736c61746528342c3530292c20726f74617465283029222066696c6c3d222366666622206f7061636974793d22302e38223e3c636972636c6520723d2232222063783d22343337222063793d2231313220222f3e3c636972636c6520723d22322e3836222063783d22313834222063793d22363720222f3e3c636972636c6520723d22322e3836222063783d22323539222063793d2231373520222f3e3c636972636c6520723d2232222063783d22323331222063793d2233323420222f3e3c636972636c6520723d22302e3636222063783d2236312e303030222063793d2236342e303030222f3e3c636972636c6520723d2232222063783d22323231222063793d22353130222f3e3c636972636c6520723d22322e3836222063783d22343537222063793d2233393520222f3e3c636972636c6520723d2232222063783d22333737222063793d2231313520222f3e3c636972636c6520723d2232222063783d22343430222063793d2231353720222f3e3c636972636c6520723d2232222063783d22323631222063793d2232393620222f3e3c636972636c6520723d2232222063783d22323235222063793d2232343920222f3e3c636972636c6520723d2232222063783d22343433222063793d2231323320222f3e3c636972636c6520723d2232222063783d22333836222063793d2231313620222f3e3c636972636c6520723d2232222063783d22333234222063793d2232373620222f3e3c636972636c6520723d2232222063783d22323534222063793d22343932222f3e3c636972636c6520723d2232222063783d22313130222063793d22343439222f3e3c636972636c6520723d22322e3836222063783d22353032222063793d2235323620222f3e3c636972636c6520723d2232222063783d22313438222063793d22343632222f3e3c636972636c6520723d2232222063783d22313336222063793d22343139222f3e3c636972636c6520723d22322e3836222063783d22353233222063793d2235343720222f3e3c7061746820643d226d3136392c20343437204c203134382c20343632204c203133342c343537204c203133322c20343735204c203133392c20343832204d203133342c343537204c203132382c343431204c203133362c343139204d203132382c20343431204c203131302c20343439204c203130302c343436204c2039302c343236204c2039372c343231204d2039302c343236204c2038312c343234204c2036362c343135204d203131302c20343439204c2039372c20343630204c2039312c20343533204c203130302c343436204d2039312c343533204c2036322c20343436204c2034322c20343638204c2037312c20353135204c2038382c353037204d2037312c353135204c2039312c35313922207374726f6b653d222366666622206f7061636974793d222e35222066696c6c3d226e6f6e65222f3e3c2f673e3c636972636c6520723d2232222063783d22343335222063793d2233333320222f3e3c7061746820643d226d3430302c20353434204c203431352c20353533204c203432352c353431204c3436352c20353339204c203439352c20353431204c203532332c20353437204c203530322c20353236204c203438322c20353032204c203437352c20343834204c203435392c20343435204c203435342c20343235204c203434352c20343133204c203434382c20343031204c203435372c20333935204c203437312c20343030204c203437342c20343137204c203436382c20343237204c20343534203432352022207374726f6b653d222366666622206f7061636974793d222e35222066696c6c3d226e6f6e6522207374726f6b652d77696474683d22312e3433222f3e3c2f673e3c636972636c6520723d22322e3836222063783d22323134222063793d2231333920222f3e3c636972636c6520723d2232222063783d22353130222063793d2232343820222f3e3c636972636c6520723d22322e3836222063783d22343030222063793d2235343420222f3e3c636972636c6520723d2232222063783d22343538222063793d2232393620222f3e3c636972636c6520723d22322e3836222063783d22323130222063793d2231323120222f3e3c636972636c6520723d2232222063783d22333732222063793d2235333020222f3e3c7061746820643d226d202d3330203630204c202d3130203435204c20352030204c203535203130204c203830203330204c203835203435222066696c6c3d226e6f6e6522207374726f6b653d22776869746522206f7061636974793d222e35222f3e3c2f673e3c636972636c6520723d2232222063783d22313336222063793d2232373620222f3e3c636972636c6520723d2232222063783d22323031222063793d22343935222f3e3c636972636c6520723d2232222063783d22333039222063793d2232383720222f3e3c636972636c6520723d2232222063783d22313038222063793d2232323420222f3e3c67207472616e73666f726d3d227472616e736c617465283235342c2d313134292c20726f74617465283029222066696c6c3d222366666622206f7061636974793d22302e38223e3c636972636c6520723d2232222063783d22333138222063793d2232383120222f3ea2646970667358221220465a5734effbff160d5cced3d1c4431b0f47d872715d555936bd988c20adbdb564736f6c63430008120033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}